name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: minhrm-test
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build-and-push
    if: ${{ always() && contains(github.event.head_commit.message, '[deploy]') }}
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ needs.build-and-push.outputs.registry }}
            docker pull ${{ needs.build-and-push.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest
            docker stop minhrm || true
            docker rm minhrm || true
            docker run -d --name minhrm -p 80:80 ${{ needs.build-and-push.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest
